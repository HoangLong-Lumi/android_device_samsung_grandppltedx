# ==============================================
# Policy File of /system/bin/rild Executable File


# ==============================================
# Type Declaration
# ==============================================

#type rild_exec;
type domain;


# ==============================================
# MTK Policy Rule
# ==============================================

init_daemon_domain(rild)
net_domain(rild)
allow rild self:netlink_route_socket nlmsg_write;
allow rild kernel:system module_request;
unix_socket_connect(rild, property, init)
allow rild self:capability { setuid net_admin net_raw };
allow rild alarm_device:chr_file rw_file_perms;
allow rild cgroup:dir create_dir_perms;
allow rild radio_device:chr_file rw_file_perms;
allow rild radio_device:blk_file r_file_perms;
allow rild mtd_device:dir search;
allow rild efs_file:dir create_dir_perms;
allow rild efs_file:file create_file_perms;
allow rild shell_exec:file rx_file_perms;
allow rild bluetooth_efs_file:file r_file_perms;
allow rild bluetooth_efs_file:dir r_dir_perms;
allow rild radio_data_file:dir rw_dir_perms;
allow rild radio_data_file:file create_file_perms;
allow rild sdcard_type:dir r_dir_perms;
allow rild system_data_file:dir r_dir_perms;
allow rild system_data_file:file r_file_perms;
allow rild system_file:file x_file_perms;
allow rild proc:file write;
allow rild proc_net:file write;
allow rild eemcs_device:chr_file { read write };
allow rild eemcs_device:chr_file open;
allow rild eemcs_device:chr_file ioctl;
allow rild para_block_device:blk_file { read write open};

# property service
allow rild radio_prop:property_service set;
allow rild net_radio_prop:property_service set;
allow rild system_radio_prop:property_service set;
allow rild persist_ril_prop:property_service set;
auditallow rild net_radio_prop:property_service set;
auditallow rild system_radio_prop:property_service set;
allow rild ril_cdma_report_prop:property_service set;

# Read/Write to uart driver (for GPS)
allow rild gps_device:chr_file rw_file_perms;

allow rild tty_device:chr_file rw_file_perms;

# Allow rild to create and use netlink sockets.
allow rild self:netlink_socket create_socket_perms;
allow rild self:netlink_kobject_uevent_socket create_socket_perms;

# Access to wake locks
wakelock_use(rild)

allow rild self:socket create_socket_perms;
allow rild Vcodec_device:chr_file { read write open };
allow rild devmap_device:chr_file { read ioctl open };
allow rild devpts:chr_file { read write open };
allow rild self:capability dac_override;

allow rild ccci_device:chr_file { read write ioctl open };
allow rild devpts:chr_file ioctl;
allow rild misc_device:chr_file { read write open };
#allow rild platformblk_device:blk_file { read write open };
allow rild proc_lk_env:file rw_file_perms;
allow rild sysfs_vcorefs_pwrctrl:file { open write };
allow rild ril_active_md_prop:property_service set;
allow rild ril_mux_report_case_prop:property_service set;
allow rild ctl_muxreport-daemon_prop:property_service set;
allow rild persist_service_atci_prop:property_service set;
allow rild block_device:dir search;
#allow rild platformblk_device:dir search;
allow rild platform_app:fd use;
allow rild radio:fd use;
allow rild radio_tmpfs:file write;
allow rild mmcblk0_block_device:blk_file { read write open };

# For emulator
allow rild qemu_pipe_device:chr_file rw_file_perms;
allow rild socket_device:sock_file write;

# For MAL MFI
allow rild mtkmal:unix_stream_socket connectto;
allow rild mal_mfi_socket:sock_file write;


