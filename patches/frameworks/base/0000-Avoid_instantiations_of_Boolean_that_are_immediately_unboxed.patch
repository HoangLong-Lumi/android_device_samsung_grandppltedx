From 5cb833b218f38c4c4393c6ce8a75d33a75ebf565 Mon Sep 17 00:00:00 2001
From: Tobias Thierer <tobiast@google.com>
Date: Thu, 21 Apr 2016 17:51:41 +0100
Subject: [PATCH] Avoid instantiations of Boolean that are immediately unboxed.

Replaced Boolean.valueOf() -> parseBoolean() across frameworks/base
(not including Am.java, which I'm leaving for a separate change).

Also fixed a couple of other valueOf()s in SyncStorageEngine.

Bug: 28289401
(cherry-picked from commit ca0182073530a237babe65b9ec7a9b41e667f8d1)
Change-Id: I2c6fb39a465885e7e625ed8894b1b9f8a30da5bc
---
 core/java/android/service/notification/ZenModeConfig.java     | 2 +-
 core/java/com/android/internal/net/VpnProfile.java            | 2 +-
 core/java/com/android/internal/util/XmlUtils.java             | 2 +-
 services/core/java/com/android/server/am/ActivityRecord.java  | 2 +-
 .../java/com/android/server/notification/RankingHelper.java   | 2 +-
 .../core/java/com/android/server/tv/PersistentDataStore.java  | 2 +-
 telephony/java/android/telephony/ServiceState.java            | 2 +-
 telephony/java/android/telephony/SignalStrength.java          | 2 +-
 telephony/java/android/telephony/TelephonyManager.java        | 4 ++--
 9 files changed, 10 insertions(+), 10 deletions(-)

diff --git a/core/java/android/service/notification/ZenModeConfig.java b/core/java/android/service/notification/ZenModeConfig.java
index e90a3ba54351..f4fd4e7a9848 100644
--- a/core/java/android/service/notification/ZenModeConfig.java
+++ b/core/java/android/service/notification/ZenModeConfig.java
@@ -579,7 +579,7 @@ private static boolean safeBoolean(XmlPullParser parser, String att, boolean def
 
     private static boolean safeBoolean(String val, boolean defValue) {
         if (TextUtils.isEmpty(val)) return defValue;
-        return Boolean.valueOf(val);
+        return Boolean.parseBoolean(val);
     }
 
     private static int safeInt(XmlPullParser parser, String att, int defValue) {
diff --git a/core/java/com/android/internal/net/VpnProfile.java b/core/java/com/android/internal/net/VpnProfile.java
index 9a5543afcd78..ab52f2f9a9c8 100644
--- a/core/java/com/android/internal/net/VpnProfile.java
+++ b/core/java/com/android/internal/net/VpnProfile.java
@@ -135,7 +135,7 @@ public static VpnProfile decode(String key, byte[] value) {
             profile.dnsServers = values[5];
             profile.searchDomains = values[6];
             profile.routes = values[7];
-            profile.mppe = Boolean.valueOf(values[8]);
+            profile.mppe = Boolean.parseBoolean(values[8]);
             profile.l2tpSecret = values[9];
             profile.ipsecIdentifier = values[10];
             profile.ipsecSecret = values[11];
diff --git a/core/java/com/android/internal/util/XmlUtils.java b/core/java/com/android/internal/util/XmlUtils.java
index 6393fbae7180..992cb4e51f0f 100644
--- a/core/java/com/android/internal/util/XmlUtils.java
+++ b/core/java/com/android/internal/util/XmlUtils.java
@@ -1280,7 +1280,7 @@ private static final HashSet readThisSetXml(XmlPullParser parser, String endTag,
             if (eventType == parser.START_TAG) {
                 if (parser.getName().equals("item")) {
                     try {
-                        array[i] = Boolean.valueOf(parser.getAttributeValue(null, "value"));
+                        array[i] = Boolean.parseBoolean(parser.getAttributeValue(null, "value"));
                     } catch (NullPointerException e) {
                         throw new XmlPullParserException("Need value attribute in item");
                     } catch (NumberFormatException e) {
diff --git a/services/core/java/com/android/server/am/ActivityRecord.java b/services/core/java/com/android/server/am/ActivityRecord.java
index 55c4698528a8..ac0ea192b69f 100755
--- a/services/core/java/com/android/server/am/ActivityRecord.java
+++ b/services/core/java/com/android/server/am/ActivityRecord.java
@@ -1468,7 +1468,7 @@ static ActivityRecord restoreFromXml(XmlPullParser in,
             } else if (ATTR_RESOLVEDTYPE.equals(attrName)) {
                 resolvedType = attrValue;
             } else if (ATTR_COMPONENTSPECIFIED.equals(attrName)) {
-                componentSpecified = Boolean.valueOf(attrValue);
+                componentSpecified = Boolean.parseBoolean(attrValue);
             } else if (ATTR_USERID.equals(attrName)) {
                 userId = Integer.parseInt(attrValue);
             } else if (attrName.startsWith(TaskDescription.ATTR_TASKDESCRIPTION_PREFIX)) {
diff --git a/services/core/java/com/android/server/notification/RankingHelper.java b/services/core/java/com/android/server/notification/RankingHelper.java
index ffc1a0412531..2ba9e7e15849 100644
--- a/services/core/java/com/android/server/notification/RankingHelper.java
+++ b/services/core/java/com/android/server/notification/RankingHelper.java
@@ -318,7 +318,7 @@ private static int tryParseInt(String value, int defValue) {
 
     private static boolean tryParseBool(String value, boolean defValue) {
         if (TextUtils.isEmpty(value)) return defValue;
-        return Boolean.valueOf(value);
+        return Boolean.parseBoolean(value);
     }
 
     /**
diff --git a/services/core/java/com/android/server/tv/PersistentDataStore.java b/services/core/java/com/android/server/tv/PersistentDataStore.java
index f6b17059b934..85a882960575 100644
--- a/services/core/java/com/android/server/tv/PersistentDataStore.java
+++ b/services/core/java/com/android/server/tv/PersistentDataStore.java
@@ -251,7 +251,7 @@ private void loadFromXml(XmlPullParser parser)
                     throw new XmlPullParserException(
                             "Missing " + ATTR_ENABLED + " attribute on " + TAG_PARENTAL_CONTROLS);
                 }
-                mParentalControlsEnabled = Boolean.valueOf(enabled);
+                mParentalControlsEnabled = Boolean.parseBoolean(enabled);
             }
         }
     }
diff --git a/telephony/java/android/telephony/ServiceState.java b/telephony/java/android/telephony/ServiceState.java
index 6151e5b2c58d..507e545cf535 100644
--- a/telephony/java/android/telephony/ServiceState.java
+++ b/telephony/java/android/telephony/ServiceState.java
@@ -1016,7 +1016,7 @@ public void fillInNotifierBundle(Bundle m) {
         m.putString("data-operator-alpha-long", mDataOperatorAlphaLong);
         m.putString("data-operator-alpha-short", mDataOperatorAlphaShort);
         m.putString("data-operator-numeric", mDataOperatorNumeric);
-        m.putBoolean("manual", Boolean.valueOf(mIsManualNetworkSelection));
+        m.putBoolean("manual", mIsManualNetworkSelection);
         m.putInt("radioTechnology", mRilVoiceRadioTechnology);
         m.putInt("dataRadioTechnology", mRilDataRadioTechnology);
         m.putBoolean("cssIndicator", mCssIndicator);
diff --git a/telephony/java/android/telephony/SignalStrength.java b/telephony/java/android/telephony/SignalStrength.java
index 35aaf965b78f..1ff4258d9568 100644
--- a/telephony/java/android/telephony/SignalStrength.java
+++ b/telephony/java/android/telephony/SignalStrength.java
@@ -1089,7 +1089,7 @@ public void fillInNotifierBundle(Bundle m) {
         m.putInt("LteRssnr", mLteRssnr);
         m.putInt("LteCqi", mLteCqi);
         m.putInt("TdScdma", mTdScdmaRscp);
-        m.putBoolean("isGsm", Boolean.valueOf(isGsm));
+        m.putBoolean("isGsm", isGsm);
     }
 
     /**
diff --git a/telephony/java/android/telephony/TelephonyManager.java b/telephony/java/android/telephony/TelephonyManager.java
index 372b127b131e..517b3aa08cb7 100644
--- a/telephony/java/android/telephony/TelephonyManager.java
+++ b/telephony/java/android/telephony/TelephonyManager.java
@@ -5283,7 +5283,7 @@ public boolean getSmsReceiveCapable(boolean defaultValue) {
      */
     public boolean getSmsReceiveCapableForPhone(int phoneId, boolean defaultValue) {
         if (SubscriptionManager.isValidPhoneId(phoneId)) {
-            return Boolean.valueOf(TelephonyManager.getTelephonyProperty(phoneId,
+            return Boolean.parseBoolean(TelephonyManager.getTelephonyProperty(phoneId,
                     TelephonyProperties.PROPERTY_SMS_RECEIVE, String.valueOf(defaultValue)));
         }
 
@@ -5314,7 +5314,7 @@ public boolean getSmsSendCapable(boolean defaultValue) {
      */
     public boolean getSmsSendCapableForPhone(int phoneId, boolean defaultValue) {
         if (SubscriptionManager.isValidPhoneId(phoneId)) {
-            return Boolean.valueOf(TelephonyManager.getTelephonyProperty(phoneId,
+            return Boolean.parseBoolean(TelephonyManager.getTelephonyProperty(phoneId,
                     TelephonyProperties.PROPERTY_SMS_SEND, String.valueOf(defaultValue)));
         }
 
